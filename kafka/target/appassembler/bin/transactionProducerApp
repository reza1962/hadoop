#!/bin/sh
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------
#
#   Copyright (c) 2001-2006 The Apache Software Foundation.  All rights
#   reserved.


# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
BASEDIR=`cd "$PRGDIR/.." >/dev/null; pwd`



# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/repo
fi

CLASSPATH=$CLASSPATH_PREFIX:"$BASEDIR"/etc:"$REPO"/spring-integration-kafka-1.2.1.RELEASE.jar:"$REPO"/metrics-annotation-2.2.0.jar:"$REPO"/reactor-core-2.0.3.RELEASE.jar:"$REPO"/reactive-streams-1.0.0.jar:"$REPO"/metrics-core-2.2.0.jar:"$REPO"/kafka_2.10-0.8.2.1.jar:"$REPO"/scala-library-2.10.4.jar:"$REPO"/zookeeper-3.4.6.jar:"$REPO"/jline-0.9.94.jar:"$REPO"/jopt-simple-3.2.jar:"$REPO"/zkclient-0.3.jar:"$REPO"/gs-collections-5.0.0.jar:"$REPO"/gs-collections-api-5.0.0.jar:"$REPO"/avro-1.7.7.jar:"$REPO"/jackson-core-asl-1.9.13.jar:"$REPO"/jackson-mapper-asl-1.9.13.jar:"$REPO"/paranamer-2.3.jar:"$REPO"/snappy-java-1.0.5.jar:"$REPO"/commons-compress-1.4.1.jar:"$REPO"/xz-1.0.jar:"$REPO"/avro-maven-plugin-1.7.7.jar:"$REPO"/maven-plugin-api-2.0.10.jar:"$REPO"/maven-project-2.0.10.jar:"$REPO"/maven-settings-2.0.10.jar:"$REPO"/maven-profile-2.0.10.jar:"$REPO"/maven-model-2.0.10.jar:"$REPO"/maven-artifact-manager-2.0.10.jar:"$REPO"/maven-repository-metadata-2.0.10.jar:"$REPO"/wagon-provider-api-1.0-beta-2.jar:"$REPO"/maven-plugin-registry-2.0.10.jar:"$REPO"/plexus-interpolation-1.1.jar:"$REPO"/plexus-utils-1.5.5.jar:"$REPO"/maven-artifact-2.0.10.jar:"$REPO"/plexus-container-default-1.0-alpha-9-stable-1.jar:"$REPO"/classworlds-1.1-alpha-2.jar:"$REPO"/file-management-1.2.1.jar:"$REPO"/maven-shared-io-1.1.jar:"$REPO"/avro-compiler-1.7.7.jar:"$REPO"/commons-lang-2.6.jar:"$REPO"/velocity-1.7.jar:"$REPO"/commons-collections-3.2.1.jar:"$REPO"/avro-ipc-1.7.7.jar:"$REPO"/jetty-6.1.26.jar:"$REPO"/jetty-util-6.1.26.jar:"$REPO"/netty-3.4.0.Final.jar:"$REPO"/servlet-api-2.5-20081211.jar:"$REPO"/spring-integration-stream-4.2.0.RELEASE.jar:"$REPO"/spring-integration-core-4.1.1.RELEASE.jar:"$REPO"/spring-messaging-4.1.3.RELEASE.jar:"$REPO"/spring-beans-4.1.3.RELEASE.jar:"$REPO"/spring-core-4.1.3.RELEASE.jar:"$REPO"/commons-logging-1.2.jar:"$REPO"/spring-tx-4.1.3.RELEASE.jar:"$REPO"/reactor-core-1.1.4.RELEASE.jar:"$REPO"/disruptor-3.2.1.jar:"$REPO"/jsr166e-1.0.jar:"$REPO"/spring-retry-1.1.1.RELEASE.jar:"$REPO"/spring-aop-4.1.3.RELEASE.jar:"$REPO"/aopalliance-1.0.jar:"$REPO"/spring-context-4.1.3.RELEASE.jar:"$REPO"/spring-expression-4.1.3.RELEASE.jar:"$REPO"/junit-4.4.jar:"$REPO"/kafka-clients-0.8.2.0.jar:"$REPO"/lz4-1.2.0.jar:"$REPO"/slf4j-api-1.7.6.jar:"$REPO"/jcl-over-slf4j-1.7.6.jar:"$REPO"/slf4j-log4j12-1.7.6.jar:"$REPO"/log4j-1.2.17.jar:"$REPO"/com.multilix.kafka-0.0.1-SNAPSHOT.jar
EXTRA_JVM_ARGUMENTS=""

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS \
  $EXTRA_JVM_ARGUMENTS \
  -classpath "$CLASSPATH" \
  -Dapp.name="transactionProducerApp" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dapp.home="$BASEDIR" \
  -Dbasedir="$BASEDIR" \
  com.multilix.kafka.app.TransactionProducerApp \
  "$@"
